#spring.datasource.url=jdbc:mysql://localhost:3306/emsdb
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.show-sql=true
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/emsdb
spring.datasource.username=postgres
spring.datasource.password=mugisha

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER


#spring.kafka.producer.bootstrap-servers =144.126.157.125:9093
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer


spring.kafka.consumer.bootstrap-servers =144.126.157.125:9093
spring.kafka.consumer.group-id= mygroup
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*

#spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.bootstrap-servers =144.126.157.125:9093
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
#
